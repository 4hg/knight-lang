# Checks to see if `chr` is a digit.
; = isdigit BLOCK
	: & (< '/' chr) (< chr ':')

# Parses out the `lhs`, `rhs`, and `op`.
; = parse BLOCK
 	# convert expr to a number, ignoring invalid values.
	; = lhs + 0 expr

	# Strip `lhs` and any leading whitespace
	; WHILE (; (= chr GET expr 0 1) | (CALL isdigit) (? chr ' '))
		; = expr SET expr 0 1 ""
		: & (! expr)
			; OUTPUT "expecting in put of the form NUM <op> NUM"
			: QUIT 1

	# op is just the first non-digit chr.
	; = op GET expr 0 1
	# rhs is just the remainder of the expression as a number
	: = rhs + 0 (SET expr 0 1 "")

; = eval BLOCK
	: IF | (? op '+')
	     | (? op '-')
	     | (? op '*')
	     | (? op '/')
	     | (? op '%')
	       (? op '^')
		: OUTPUT EVAL ++++ op " " lhs " " rhs
	# ELSE
		; OUTPUT ++ "unknown operator '" op "'"
		: QUIT 1


; OUTPUT "enter an expression in the form 'NUM <op> NUM'"
; = expr "2 * 24" #PROMPT
; CALL parse
: CALL eval
